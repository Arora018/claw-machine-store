name: Build APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (development or preview)'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - preview
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tablet-app/package-lock.json

      - name: Install dependencies
        run: |
          cd tablet-app
          npm ci
          
      - name: Verify app configuration
        run: |
          cd tablet-app
          echo "📋 App Configuration:"
          cat app.json
          echo "📋 EAS Configuration:"
          cat eas.json
          echo "📋 Package.json:"
          cat package.json | grep -A 10 -B 5 "scripts\|dependencies"

      - name: Setup EAS CLI
        run: |
          npm install -g @expo/cli@latest
          npm install -g eas-cli@latest
          echo "✅ EAS CLI installed"
          eas --version

      - name: Check Expo token
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "❌ EXPO_TOKEN secret is missing!"
            echo "Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "Add EXPO_TOKEN secret with your token from https://expo.dev/accounts/settings/access-tokens"
            exit 1
          fi
          echo "✅ EXPO_TOKEN found (length: ${#EXPO_TOKEN})"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Login to Expo
        run: |
          cd tablet-app
          echo "🔑 Logging in to Expo..."
          export EXPO_TOKEN="${{ secrets.EXPO_TOKEN }}"
          eas whoami
          echo "✅ Successfully authenticated with Expo"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Initialize EAS project
        run: |
          cd tablet-app
          echo "🚀 Initializing EAS project..."
          echo "📋 Project will be created as: @${{ github.repository_owner }}/yanoi-pos"
          
          # Initialize EAS project with force flag to create if it doesn't exist
          eas init --force --non-interactive
          echo "✅ EAS project initialized successfully"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build APK
        run: |
          cd tablet-app
          echo "🔨 Starting APK build..."
          echo "Build type: ${{ github.event.inputs.build_type || 'development' }}"
          
          # Build with selected configuration
          eas build --platform android --profile ${{ github.event.inputs.build_type || 'development' }} --non-interactive
          echo "✅ Build completed successfully"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build status
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "🎉 Build completed successfully!"
            echo "📱 Your APK should be available in the EAS dashboard"
            echo "🔗 Check: https://expo.dev/accounts/$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')/projects/yanoi-pos/builds"
          else
            echo "❌ Build failed. Check the logs above for details."
          fi 